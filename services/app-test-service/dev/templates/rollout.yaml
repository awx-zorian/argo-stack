apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: app-test-service
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    canary:
      canaryService: app-test-service-preview
      steps:
      - setWeight: 20
      - pause: {}
      - setWeight: 40
      - pause: {duration: 10}
      - setWeight: 60
      - pause: {duration: 10}
      - setWeight: 80
      - pause: {duration: 10}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: app-test-service
  template:
    metadata:
      labels:
        app: app-test-service
    spec:
      containers:
      - name: app-test-service
      {{- if .Values.myEnv }}
        env:
        {{- range $k, $v := .Values.myEnv }}
        - name: {{ $k }}
          value: {{ required (printf "%s missing" $k) $v.value }}
        {{- end }}
      {{- end }}
        image: {{ .Values.myimage }}
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 60
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health/liveness
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
          name: main
          protocol: TCP
        - containerPort: 8081
          name: mgmt
          protocol: TCP
        - containerPort: 8082
          name: debug
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health/readiness
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 2500m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      restartPolicy: Always
      serviceAccount: default
      serviceAccountName: default